name: Deploy kubernetes
on:
  push:
    branches:
      - master
  workflow_dispatch:  # magically allow triggering from the UI
env:
  DUPLO_HOST: https://galileo.duplocloud.net
  DUPLO_TOKEN: ${{ secrets.GALILEO_API_TOKEN }}
  DUPLO_INFRA_NAME: jpmc
jobs:
  deploy-manifest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup duplo-jit
        run: |
          curl https://github.com/duplocloud/duplo-jit/releases/download/v0.5.4/duplo-jit_0.5.4_linux_386.zip -L -o duplo-jit.zip
          unzip duplo-jit.zip -d duplo_jit_unzipped
          cp duplo_jit_unzipped/duplo-jit /usr/local/bin/
      - name: "Fetch Kubernetes Cluster info"
        id: "k8s_info"
        run: |
          curl -Ssf -H 'Content-type: application/json' -H "Authorization: Bearer ${{ secrets.GALILEO_API_TOKEN }}" "https://galileo.duplocloud.net/v3/admin/plans/${{ env.DUPLO_INFRA_NAME }}/k8sClusterConfig" > k8sconfig.json
          CLUSTER_NAME="$(jq -r '.Name' k8sconfig.json)"
          KUBERNETES_ENDPOINT="$(jq -r '.ApiServer' k8sconfig.json)"
          KUBERNETES_CERT_DATA="$(jq -r '.CertificateAuthorityDataBase64' k8sconfig.json)"
          echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_OUTPUT
          echo "KUBERNETES_ENDPOINT=$KUBERNETES_ENDPOINT" >> $GITHUB_OUTPUT
          echo "KUBERNETES_CERT_DATA=$KUBERNETES_CERT_DATA" >> $GITHUB_OUTPUT

      - name: Run kubectl
        run: |
          mkdir -p /tmp
          cat << 'EOF' > /tmp/kubeconfig.yaml
          apiVersion: v1
          clusters:
            - name: <CLUSTER_NAME>
              cluster:
                server: <KUBERNETES_ENDPOINT>
                certificate-authority-data: >-
                  <KUBERNETES_CERT_DATA>
          contexts:
            - name: <CLUSTER_NAME>
              context:
                namespace: kube-system
                user: <CLUSTER_NAME>
                cluster: <CLUSTER_NAME>
          users:
            - name: <CLUSTER_NAME>
              user:
                exec:
                  apiVersion: client.authentication.k8s.io/v1beta1
                  command: duplo-jit
                  installHint: |-
                    Install duplo-jit for use with kubectl by following
                    https://github.com/duplocloud/duplo-jit
                  args:
                    - k8s
                    - '--plan'
                    - <DUPLO_INFRA_NAME>
                    - '--host'
                    - https://galileo.duplocloud.net/
                    - '--token'
                    - '<DUPLO_TOKEN>'
          current-context: <CLUSTER_NAME>
          EOF
          export KUBECONFIG=/tmp/kubeconfig.yaml
          sed -i 's#<DUPLO_TOKEN>#${{ secrets.GALILEO_API_TOKEN }}#' /tmp/kubeconfig.yaml
          sed -i 's#<CLUSTER_NAME>#${{ steps.k8s_info.outputs.CLUSTER_NAME }}#' /tmp/kubeconfig.yaml
          sed -i 's#<KUBERNETES_ENDPOINT>#${{ steps.k8s_info.outputs.KUBERNETES_ENDPOINT }}#' /tmp/kubeconfig.yaml
          sed -i 's#<KUBERNETES_CERT_DATA>#${{ steps.k8s_info.outputs.KUBERNETES_CERT_DATA }}#' /tmp/kubeconfig.yaml
          sed -i 's#<DUPLO_INFRA_NAME>#${{ env.DUPLO_INFRA_NAME }}#' /tmp/kubeconfig.yaml
          kubectl get ns
          